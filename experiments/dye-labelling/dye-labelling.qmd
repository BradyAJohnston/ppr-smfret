---
title: "ppr-smfret"
fig-width: 9
fig-align: center
code-fold: true
code-link: true
---

## Fluorescently Labelling Protein

```{r}
#| label: setup
#| message: false
library(tidyverse)

read_spectro <- function(fl) {
  start <- readLines(fl) |> 
    stringr::str_which("Wavelength")
  
  readr::read_csv(
    file = fl, 
    skip = start - 1, 
    col_select = !contains(".."), 
    col_types = readr::cols()
    ) |> 
    janitor::clean_names()
}

chrom_interp_volume <- function(df) {
  df |> 
    dplyr::select(time, volume) |> 
    unique() |> 
    dplyr::mutate(
      same = volume != lag(volume), 
      same = dplyr::if_else(is.na(same), TRUE, FALSE), 
      group = cumsum(same)
    ) |> 
    dplyr::group_by(group, volume) |> 
    tidyr::nest() |> 
    dplyr::ungroup() |> 
    dplyr::mutate(
      vol_new = lead(volume)
    ) |> 
    tidyr::unnest() |> 
    dplyr::group_by(volume) |> 
    dplyr::mutate(
      row = dplyr::row_number(), 
      factor = row / max(row), 
      vol_adjusted = volume + factor * (vol_new - volume)
    ) |> 
    dplyr::ungroup() |> 
    dplyr::select(time, volume = vol_adjusted)
}

chrom_read_quadtech <- function(file) {
  start_line <- readr::read_lines(file, n_max = 50) |>
    stringr::str_trim() |>
    stringr::str_which("^\\d") |>
    min()
  
  data <-
    readr::read_csv(file, skip = start_line - 2, col_types = readr::cols())
  
  met <-
    readr::read_csv(
      file,
      n_max = start_line - 3,
      col_names = FALSE,
      col_types = readr::cols()
    ) |>
    dplyr::rename(category = 1, meta = 2)
  
  met <- met |>
    dplyr::filter(str_detect(category, "Quad")) |>
    dplyr::mutate(
      wl = as.numeric(stringr::str_extract(meta, "\\d{3}")),
      channel = as.numeric(stringr::str_extract(category, "\\d$"))
    )
  
  
  data <- data |>
    janitor::clean_names() |>
    tidyr::pivot_longer(cols = contains("quad")) |>
    dplyr::mutate(name = as.numeric(str_extract(name, "\\d$"))) |>
    dplyr::rename(channel = name) |>
    dplyr::left_join(met,
                     by = c("channel" = "channel"))
  
  volume_interp <- chrom_interp_volume(data)
  
  data <- data |>
    select(-volume) |> 
    left_join(volume_interp, by = c("time" = "time"))

  data
}

```

To create more of the dsnPPR10-C2 protein that is labelled for smFRET experiments, conducting the labelling of the proteins with new dyes that have been ordered.

Testing the labelling procedure with 3 different ratios to see which is the best, 1to1, 1to1.5 & 1to2 for ratios of Cy3AF647.

#### Read in the data for both datasets.

```{r}
#| warning: false
fl <- here::here("data/20220729_dppr10_dye_pre_desalt.csv")
df <- read_spectro(fl)

df1 <- df |> 
  pivot_longer(
    cols = -1,
    names_to = "sample", 
    values_to = "abs"
  ) |> 
  mutate(
    ratio = case_when(
      str_detect(sample, "1to?2") ~ "1to2", 
      str_detect(sample, "1to1_5") ~ "1to1.5", 
      str_detect(sample, "1to1") ~ "1to1", 
      TRUE ~ "blank"
    ), 
    time = "pre", 
    distance = 0.2
  )

fl <- here::here("data/20220729_dppr10_dye_post_desalt.csv")
df <- read_spectro(fl)

df |> 
  pivot_longer(
    cols = -1, 
    names_to = "sample", 
    values_to = "abs"
  ) |> 
  mutate(
    distance = str_extract(sample, "\\d(?=m)"), 
    distance = if_else(is.na(distance), "2", distance), 
    distance = as.numeric(distance) * 0.1, 
    time = "post"
  ) -> df
  
df <- df |> 
  mutate(
    ratio = case_when(
      str_detect(sample, "1to2") ~ "1to2", 
      str_detect(sample, "1to1_5") ~ "1to1.5", 
      str_detect(sample, "1to1") ~ "1to1", 
      TRUE ~ "blank"
    )
  )
```

Plotting the absorbance of the different samples, before the desalting step to remove the unbound dyes.

```{r}
#| code-fold: show
df1 |> 
  filter(ratio != "blank") |> 
  ggplot(aes(wavelength_nm, abs, colour = ratio)) + 
  geom_vline(xintercept = c(545, 650), size = 5, alpha = 0.1) + 
  geom_line() + 
  theme_bw() + 
  coord_cartesian(ylim = c(NA, 14)) + 
  theme(
    legend.position = "bottom"
  ) + 
  labs(x = "Wavelength (nm)", 
       y = "Absorbance (AU)", 
       colour = "Cy3:AF647 Ratio"
       )
```

As you would expect, there is an increasing peaking at 550 nm that corresponds to the increasing amount of acceptor dye that is being added.

### Plotting the samples after the labelling step.

```{r}
#| code-fold: show
df |>
  filter(ratio != "blank") |> 
  filter(distance != 0.2) |> 
  ggplot(aes(wavelength_nm, abs, colour = ratio)) + 
  geom_vline(xintercept = c(550, 650), size = 5, alpha = 0.1) + 
  geom_line() + 
  theme_bw() + 
  coord_cartesian(ylim = c(NA, 0.9)) + 
  theme(
    legend.position = "bottom"
  ) + 
  labs(x = "Wavelength (nm)", 
       y = "Absorbance (AU)", 
       colour = "Cy3:AF647 Ratio"
       )
```

There is much less absorbance in the acceptor peak. The samples also seem a lot 'pinker' than they should. Seems that there is a lot less acceptor around, potentially meaning that the dye hasn't labelled the protein successfully.

```{r}
cdf <- bind_rows(df, df1) |> 
  filter(ratio != "blank") |> 
  filter(!(time == "post" & distance == 0.2))

wl_range <- function(wl, radius = 2) {
  seq(wl - radius, wl + radius)
}

# bin & average wl data

binned <- cdf |> 
  group_by(time, sample) |> 
  mutate(
    signal = case_when(
      wavelength_nm %in% wl_range(280) ~ "prot",
      wavelength_nm %in% wl_range(550) ~ "don",
      wavelength_nm %in% wl_range(650) ~ "acc"
    )
  ) |> 
  drop_na(signal) |> 
  group_by(sample, time, ratio, distance, signal) |> 
  summarise(
    abs = mean(abs)
  )

binned <- binned |> 

  mutate(
    ext = case_when(
      signal == "prot" ~ 30955, 
      signal == "don" ~ 150000, 
      signal == "acc" ~ 265000
    ), 
    mw = case_when(
      signal == "prot" ~ 69803, 
      signal == "don" ~ 666, 
      signal == "acc" ~ 1250
    )
  ) |> 
  mutate(
    conc = abs / ext / (distance  / 10), 
    volume = case_when(
      time == "pre" ~ 1e-3, 
      time == "post" ~ 2e-3
    ), 
    amount = conc * volume, 
    time = factor(time, levels = c("pre", "post"))
  )
```

### Plotting Ratio of Dyes to Protein

```{r}

pos = position_dodge2(width = 0.9)

binned |> 
  group_by(sample, time, ratio) |> 
  mutate(
    per_prot = amount / amount[which(signal == "prot")]
  ) |> 
  ggplot(aes(ratio, per_prot, fill = signal)) + 
  geom_col(position = pos) +
  facet_grid(
    rows = vars(time),
    # cols = vars(distance), 
    scales = "free_y"
  ) + 
  theme_bw() + 
  labs(
    x = "Cy3 to AF647 Ratio", 
    y = "Ratio Dye to Protein", 
    fill = "Dye"
  ) + 
  theme(
    legend.position = "bottom"
  ) + 
  geom_label(
    fill = "white",
    aes(label = round(per_prot, 2)), 
    position = pos
    )

```

For some reason, the acceptor dye (AF647) is very low in the post-labelling.

I need to make some adjustments, as I don't think the ratios of the dyes to the protein are quite correct due to the $CF_{280}$ of the two dyes which both will absorb a small amount at 280 nm, false boosting the amount of 'protein' that is detected.

I am thoroughly confused as to why there might be such a significant difference in the labelling success for these dyes. Everything should have been basically the same as it was previously, the only thing that would be different is the age of the protein, but why that would affect a single dye (AF647) I don't know, so I don't think that is the actual cause.

The only other thing that I can think of that is different, is that the AF647 was previously suspended in Milli-Q water, but this time I dissolved it into 100% DMSO. I will have to double check what I wrote in the lab-book for the previous labelling procedure. I wouldn't think that it would make a difference, but it seems that it might.

I still conducted the labelling reaction in 5% DMSO like I did previously, so I still don't know how it would have made a difference in the final reaction having been solubilised in DMSO and not water despite being soluble in both.

## Confirming with SEC

It seems from the spectro readings that there isn't any AF647 properly attaching to the protein. To confirm this, I'll do analytical SEC on the Quadtec to see if there is any absorbance from the acceptor AF647 on the protein peak or not.

```{r}
#| warning: false
#| code-fold: show
#| label: sec
#| fig-cap: Chromatogram of absorbance readings for four (4) different wavelengths (260 nm, 280 nm, 550 nm, 650 nm) from analytical size-exclusion chromatography. 50 $\mu$L injection volume. 0.3 mL / min.
fl <- here::here("data/sec/20220801_S200_5150_0.3mlmin_5uLinject_Cy3_1_AF647_2.TXT")

df <- chrom_read_quadtech(fl)

df <- df |>
  mutate(
    value = value * 1e3, 
    value = if_else(wl == 650, value - 3, value) # adjust signal for better baseline
    )

df |> 
  ggplot(aes(volume, value, colour = factor(wl))) +
  geom_line() +
  theme_bw() +
  coord_cartesian(ylim = c(0, NA), xlim = c(0, 3)) + 
  # scale_x_continuous(expand = expansion(c(0, NA))) +
  ggrepel::geom_label_repel(
    data = tribble(
      ~label, ~volume, ~value, 
      "Void", 0.98, 10.5, 
      "Cy3", 1.68, 13.5, 
      "AF647", 2.27, 24.7, 
      "Protein", 1.68, 3.7
    ), 
    mapping = aes(label = label), 
    colour = "black", 
    nudge_x = -0.1, 
    nudge_y = 0.2, 
    family = "mono"
  ) + 
  labs(
    x = "Volume (mL)", 
    y = "Absorbance (mAU)", 
    colour = "Wavelength (nm)"
  ) + 
  theme(
    legend.position = c(0.05, 0.9),
    legend.justification = c(0, 1), 
    legend.box.background = element_rect(colour = "black", fill = "white")
  ) -> plt

plt
```

```{r}
#| warning: false
#| message: false
withr::with_options(
  list(digits = 2),
  plotly::ggplotly(
    p = plt
    )
  ) |> 
  plotly::layout(
    # title = "test", 
    legend = list(
      x = 0.05,
      y = 0.9,
      xanchor = 1,
      yanchor = 0, 
      bordercolor = gray(0.3, alpha = 0.3), 
      borderwidth = 1.5
    ),
    hovermode = 'x', 
    tooltip = list()
  )
```
